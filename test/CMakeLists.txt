
cmake_minimum_required (VERSION 3.17)

find_package (doctest REQUIRED)
find_package (rapidcheck REQUIRED)

set (t_ clang-sanitizers)
    add_library (${t_} INTERFACE)
    if (CMAKE_CXX_COMPILER_ID MATCHES "^Clang$")
        target_compile_options (${t_} INTERFACE $<$<CONFIG:Debug>:-fsanitize=address,undefined>)
        target_link_options (${t_} INTERFACE $<$<CONFIG:Debug>:-fsanitize=address,undefined>)
    endif ()

set (t_ clang-coverage)
    add_library (${t_} INTERFACE)
    if (CMAKE_CXX_COMPILER_ID MATCHES "^Clang$")
        target_compile_options (${t_} INTERFACE $<$<CONFIG:Debug>:-fprofile-instr-generate -fcoverage-mapping>)
        target_link_options (${t_} INTERFACE $<$<CONFIG:Debug>:-fprofile-instr-generate -fcoverage-mapping>)
    endif ()

set (t_ test-clockwork-base32)
    add_executable (${t_} main.cpp base32.cpp)
    target_link_libraries (${t_} PRIVATE doctest::doctest rapidcheck::rapidcheck clang-sanitizers)
    target_link_libraries (${t_} PRIVATE clockwork-base32)
    target_compile_definitions (${t_} PRIVATE DOCTEST_CONFIG_SUPER_FAST_ASSERTS=1)
    target_precompile_headers (${t_} PRIVATE <doctest/doctest.h> <string> <vector> <iterator>)
    set_source_files_properties (main.cpp PROPERTIES SKIP_PRECOMPILE_HEADERS YES)
    if (ENABLE_COVERAGE)
        target_link_libraries (${t_} PRIVATE clang-coverage)
    endif ()
